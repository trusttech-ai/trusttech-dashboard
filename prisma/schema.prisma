datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  name          String?
  document      String?   @unique
  role          Role      @default(USER)
  isActive      Boolean   @default(true)
  profileImage  String?
  lastLogin     DateTime?
  refreshToken  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
  settings      UserSettings?
}

model Session {
  id        Int       @id @default(autoincrement())
  userId    Int
  token     String    @unique
  expiresAt DateTime
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  ipAddress String?
  userAgent String?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserSettings {
  id              Int     @id @default(autoincrement())
  userId          Int     @unique
  theme           String  @default("light")
  emailNotifications Boolean @default(true)
  user            User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model trusttech_messages_log {
  id           String    @id @default(uuid()) @db.Uuid
  host_number  String?   @db.VarChar(25)
  host_name  String?   @db.VarChar(25)
  user_number  String?   @db.VarChar(25)
  user_name    String?
  user_message String?
  bot_response String?
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @updatedAt @db.Timestamp(6)
}

model trusttech_rewind_cron {
  id           String   @id @default(uuid()) @db.Uuid
  host_name  String?   @db.VarChar(25)
  host_number  String?   @db.VarChar(25)
  user_number  String   @db.VarChar(25)
  user_name    String?  @db.VarChar(25)
  active       Boolean
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  MANAGER
}
